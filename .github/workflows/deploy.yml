# yaml-language-server: $schema=./build.yaml
name: Build and Deploy
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    # Publish semver tags as releases.
    tags: ['v*.*.*']
  workflow_dispatch:


env:
  RESOURCE_GROUP: rg-azureday
  REGISTRY: azureday.azurecr.io
  REGISTRY_NAME: azureday
  REPOSITORY_NAME: samplecontainerapp
  IMAGE_NAME_INGRESS: containerappingress
  IMAGE_NAME_BUSINESS: containerappbusiness

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services:
          [
            { 'imageName': 'containerappingress', 'directory': './src/Sample.ContainerApps/'},
            { 'imageName': 'containerappbusiness', 'directory': './src/Sample.ContainerApps.BusinessLogic/'}
          ]           
    permissions:
      contents: read
      packages: write
    outputs:
      containerImage-ingress: ${{ steps.image-tag.outputs.image-containerappingress }}
      containerImage-business: ${{ steps.image-tag.outputs.image-containerappbusiness }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRYUSER }}
          password: ${{ secrets.REGISTRYPASSWORD }}   

      #build and push image to acr
      - name: Build and push Docker image
        run: |
          
          docker build ./src/Sample.ContainerApps/ -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME_INGRESS }}:v1
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME_INGRESS }}:v1
          
          docker build ./src/Sample.ContainerApps.BusinessLogic/ -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME_BUSINESS }}:v1
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME_BUSINESS }}:v1

 
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
     
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Deploy bicep
        uses: azure/CLI@v1
        if: github.event_name != 'pull_request'
        with:
          inlineScript: |
            az deployment group create \
              -g ${{ env.RESOURCE_GROUP }} \
              -f src/deploy/main.bicep \
              -p \
                  appIngressImage='${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME_INGRESS }}:v1' \
                  appIngressPort=80 \
                  appIngressisExternalIngress=true \
                  appBusinessImage='${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME_BUSINESS }}:v1' \
                  appBusinessPort=80 \
                  appBusinessExternalIngress=true \
                  containerRegistry=${{ env.REGISTRY_NAME }} \
                  containerRegistryUsername=${{ secrets.REGISTRYUSER }} \
                  containerRegistryPassword=${{ secrets.REGISTRYPASSWORD }} \      
             
