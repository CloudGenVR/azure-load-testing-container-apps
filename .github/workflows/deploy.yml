# yaml-language-server: $schema=./build.yaml
name: Build and Deploy
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    # Publish semver tags as releases.
    tags: ['v*.*.*']
  workflow_dispatch:


env:
  RESOURCE_GROUP: rg-azureday
  REGISTRY: azureday.azurecr.io
  REGISTRY_NAME: azureday
  IMAGE_NAME: samplecontainerapp
  IMAGE_NAME_INGRESS: samplecontainerapp/containerappingress
  IMAGE_NAME_BUSINESS: samplecontainerapp/containerappbusiness

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services:
          [
            { 'imageName': 'containerappingress', 'directory': './src/Sample.ContainerApps/'},
            { 'imageName': 'containerappbusiness', 'directory': './src/Sample.ContainerApps.BusinessLogic/'}
          ]           
    permissions:
      contents: read
      packages: write
    outputs:
      containerImage-ingress: ${{ steps.image-tag.outputs.image-containerappingress }}
      containerImage-business: ${{ steps.image-tag.outputs.image-containerappbusiness }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRYUSER }}
          password: ${{ secrets.REGISTRYPASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.services.imageName }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.services.directory }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output image tag
        id: image-tag
        run: echo "::set-output name=image-${{ matrix.services.imageName }}::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.services.imageName }}:sha-$(git rev-parse --short HEAD)" | tr '[:upper:]' '[:lower:]'
        
    

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
     
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Deploy bicep
        uses: azure/CLI@v1
        if: github.event_name != 'pull_request'
        with:
          inlineScript: |
            az deployment group create \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --template-file src/deploy/main.bicep \
              --parameters \
                  appingressImage='${{env.IMAGE_NAME_INGRESS}}' \
                  appIngressPort=80 \
                  appIngressisExternalIngress=true \
                  appBusinessImage='${{env.IMAGE_NAME_BUSINESS}}' \
                  appBusinessPort=80 \
                  appBusinessExternalIngress=true \
                  containerRegistry=${{ env.REGISTRY_NAME }} \
                  containerRegistryUsername=${{ secrets.REGISTRYUSER }} \
                  containerRegistryPassword=${{ secrets.REGISTRYPASSWORD }} \      
             
